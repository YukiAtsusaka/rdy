% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diff_in_means.R
\name{diff_in_means}
\alias{diff_in_means}
\title{Estimate ranking effects (UNWEIGHTED): precompute outcomes → fit per outcome → summarize}
\usage{
diff_in_means(
  data,
  items,
  treat,
  se_type = "HC2",
  clusters = NULL,
  na_action = c("none", "drop"),
  top_k_max = NULL,
  ...
)
}
\arguments{
\item{data}{A data.frame / tibble with ranking columns and \code{treat}.}

\item{items}{Character vector of ranking columns (1 = best). Length >= 2.}

\item{treat}{Column name of binary treatment (0/1, logical, or factor codable to 0/1).}

\item{se_type}{SE type for estimatr::lm_robust (default "HC2").}

\item{clusters}{Optional column name of a clustering variable (forwarded to lm_robust).}

\item{na_action}{"none" (default) or "drop". If "drop", only rows missing on \code{treat}/\code{clusters}
are removed up front; every outcome still does its own NA filtering.}

\item{top_k_max}{Optional integer (default J-1).}

\item{...}{Extra args forwarded to estimatr::lm_robust.}
}
\value{
A list with:
\itemize{
\item results: tibble of estimates for each (item × effect × scale in {raw,unit,std})
\item outcomes_long: tibble of all precomputed outcomes used for fitting
}
}
\description{
Pipeline:
(1) Build a long tibble of ultimate outcomes:
- Average rank: raw (R in {1..J}) and unit (U=(J-R)/(J-1))
- Pairwise: Y = 1{R_target < R_other}  (unit scale)
- Top-k:    Y = 1{R_target <= k}      (unit scale)
- Marginal: Y = 1{R_target == r}      (unit scale)
(2) Fit lm_robust(y ~ D) per (item, effect_type, outcome, scale)
(3) Summarize and append a standardized row (std), where:
std = raw_effect / sd0_raw (SD of the \emph{raw} outcome among controls).
For binary families, raw==unit, so std = unit_effect / sd0_binary.
}
