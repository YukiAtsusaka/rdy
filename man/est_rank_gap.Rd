% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance.R
\name{est_rank_gap}
\alias{est_rank_gap}
\title{Estimate a Cross-Group Rank Gap (U-statistic)}
\usage{
est_rank_gap(
  df,
  group_col,
  rank_cols,
  method = c("kendall", "footrule", "rho"),
  se = c("bootstrap", "analytic"),
  B = 1000,
  seed = NULL
)
}
\arguments{
\item{df}{A data frame containing rankings of the same \eqn{K} items.}

\item{group_col}{Name of the column with the grouping variable (must have exactly two groups).}

\item{rank_cols}{Character vector of column names holding the item ranks (1 = best).}

\item{method}{Distance to use: \code{"kendall"}, \code{"footrule"}, or \code{"rho"}.}

\item{se}{SE method: \code{"bootstrap"} or \code{"analytic"}.}

\item{B}{Number of bootstrap resamples if \code{se = "bootstrap"}.}

\item{seed}{Optional random seed for reproducibility.}
}
\value{
An object of class \code{rank_gap} with fields:
\itemize{
\item \code{theta_hat}: normalized gap in \eqn{[0,1]}.
\item \code{se}: standard error.
\item \code{ci95}: 95\\% interval.
\item \code{nT}, \code{nC}, \code{K}, \code{d_max}, \code{method}, \code{type}, \code{estimator}.
}
}
\description{
Computes the average pairwise rank-distance between two groups and normalizes
it by the method-specific maximum, yielding \eqn{\theta \in [0,1]}. Supports
analytic or bootstrap standard errors.
}
\examples{
set.seed(1)
K <- 5; items <- c("A","B","C","D","E")
# controls: random permutations
Cmat <- as.data.frame(t(replicate(80, sample(1:K, K))))
names(Cmat) <- items
# treated: like controls but bias item C to be worse
Tmat <- as.data.frame(t(replicate(80, {
  p <- sample(1:K, K)
  p[which(items=="C")] <- pmin(K, p[which(items=="C")] + sample(0:2, 1))
  rank(-rank(p, ties.method="first"))
})))
names(Tmat) <- items
# build data (no tibble needed)
df <- dplyr::bind_rows(
  data.frame(group="T", Tmat, check.names = FALSE),
  data.frame(group="C", Cmat, check.names = FALSE)
)
res <- est_rank_gap(df, group_col="group", rank_cols=items,
                    method="kendall", se="bootstrap", B=200, seed=42)
print(res)
}
